{"version":3,"sources":["webpack:///src/app/food/listing/food-listing.module.ts","webpack:///src/app/food/listing/food-listing.page.ts","webpack:///src/app/food/listing/food-listing.page.html","webpack:///src/app/food/listing/food-listing.resolver.ts"],"names":["routes","path","component","resolve","data","FoodListingPageModule","forChild","imports","declarations","providers","FoodListingPage","route","subscriptions","subscribe","resolvedRouteData","extractData","state","listing","error","unsubscribe","isShell","selector","templateUrl","styleUrls","FoodListingResolver","foodService","dataSource","getListingDataSource","dataStore","getListingStore"],"mappings":"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","file":"food-listing-food-listing-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { FoodService } from '../food.service';\nimport { FoodListingPage } from './food-listing.page';\nimport { FoodListingResolver } from './food-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodListingPage,\n    resolve: {\n      data: FoodListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    FoodListingPage\n  ],\n  providers: [\n    FoodListingResolver,\n    FoodService\n  ]\n})\nexport class FoodListingPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { FoodListingModel } from './food-listing.model';\n\n@Component({\n  selector: 'app-food-listing',\n  templateUrl: './food-listing.page.html',\n  styleUrls: [\n    './styles/food-listing.page.scss',\n    './styles/food-listing.shell.scss'\n  ]\n})\nexport class FoodListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: FoodListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<FoodListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<FoodListingModel>(resolvedRouteData.data, FoodListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Food Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"food-listing-content\">\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <div class=\"cover-wrapper\">\n        <a class=\"cover-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n          <app-image-shell class=\"cover-image add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"item.image\">\n            <app-aspect-ratio [ratio]=\"{w:35, h:15}\">\n              <div class=\"cover-icon-wrapper\">\n                <app-aspect-ratio [ratio]=\"{w: 20, h: 7}\">\n                  <app-image-shell class=\"item-icon\" [src]=\"item.icon\"></app-image-shell>\n                </app-aspect-ratio>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </a>\n      </div>\n      <ion-row class=\"info-row\">\n        <ion-col class=\"description-col\">\n          <ion-row class=\"description-wrapper\">\n            <h3 class=\"item-name\">\n              <a class=\"name-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n                <app-text-shell [data]=\"item.name\"></app-text-shell>\n              </a>\n            </h3>\n            <p class=\"item-address\">\n              <app-text-shell [data]=\"item.address\"></app-text-shell>\n            </p>\n            <ion-row class=\"item-tags\">\n              <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of item.tags\">\n                <span class=\"item-tag\">\n                  <app-text-shell [data]=\"tag\"></app-text-shell>\n                </span>\n              </ion-col>\n            </ion-row>\n          </ion-row>\n        </ion-col>\n        <ion-col class=\"stats-col\" size=\"2\">\n          <span class=\"item-rating\" [attr.ratingBase]=\"item.rating | floor\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <div class=\"item-price-range\">\n            <span class=\"price\" *ngFor=\"let price of [].constructor(item.priceRange)\">$</span>\n            <span class=\"no-price\" *ngFor=\"let price of [].constructor(5 - (item.priceRange || 1))\">$</span>\n          </div>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"pictures-row\">\n        <ion-col class=\"picture-wrapper\" size=\"2\" *ngFor=\"let picture of item.pictures.slice(0, 5); let i = index\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"picture-image\" [src]=\"picture\" [alt]=\"'food image'\"></app-image-shell>\n          </app-aspect-ratio>\n          <a class=\"has-more-pictures\" [routerLink]=\"['/app/categories/food/', item.slug]\" *ngIf=\"i == 4 && item.pictures.length > 5\">\n            <span class=\"pictures-count\">{{ item.pictures.length - 5 }}</span>\n          </a>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FoodService } from '../food.service';\nimport { FoodListingModel } from './food-listing.model';\n\n@Injectable()\nexport class FoodListingResolver implements Resolve<DataStore<FoodListingModel>> {\n\n  constructor(private foodService: FoodService) {}\n\n  resolve(): DataStore<FoodListingModel> {\n    const dataSource: Observable<FoodListingModel> = this.foodService.getListingDataSource();\n    const dataStore: DataStore<FoodListingModel> = this.foodService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}