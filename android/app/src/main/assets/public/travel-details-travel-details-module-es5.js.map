{"version":3,"sources":["webpack:///src/app/shell/data-store.ts","webpack:///src/app/travel/details/travel-details.module.ts","webpack:///src/app/travel/details/travel-details.page.ts","webpack:///src/app/travel/details/travel-details.page.html","webpack:///src/app/travel/details/travel-details.plain.resolver.ts","webpack:///src/app/travel/details/travel-details.resolver.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["ShellModel","isShell","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","subscribe","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","routes","path","component","resolve","data","TravelDetailsPageModule","forChild","imports","declarations","providers","TravelDetailsPage","route","subscriptions","resolvedRouteData","extractData","state","details","error","unsubscribe","selector","templateUrl","styleUrls","TravelDetailsPlainResolver","travelService","getDetailsDataSource","TravelDetailsResolver","dataSource","dataStore","getDetailsStore","ResolverHelper","source","constructor"],"mappings":"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","file":"travel-details-travel-details-module-es5.js","sourcesContent":["import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { TravelService } from '../travel.service';\nimport { TravelDetailsPage } from './travel-details.page';\nimport { TravelDetailsResolver } from './travel-details.resolver';\nimport { TravelDetailsPlainResolver } from './travel-details.plain.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TravelDetailsPage,\n    resolve: {\n      data: TravelDetailsResolver\n      // data: TravelDetailsPlainResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    TravelDetailsPage\n  ],\n  providers: [\n    TravelDetailsResolver,\n    TravelDetailsPlainResolver,\n    TravelService\n  ]\n})\nexport class TravelDetailsPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { TravelDetailsModel } from './travel-details.model';\n\n@Component({\n  selector: 'app-travel-details',\n  templateUrl: './travel-details.page.html',\n  styleUrls: [\n    './styles/travel-details.page.scss',\n    './styles/travel-details.shell.scss'\n  ]\n})\nexport class TravelDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  details: TravelDetailsModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<TravelDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<TravelDetailsModel>(resolvedRouteData.data, TravelDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/travel\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Travel Details</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"travel-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay details-image\" [src]=\"details?.image\">\n        <app-aspect-ratio [ratio]=\"{w:64, h:50}\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{w: 47, h: 25}\">\n              <app-image-shell [src]=\"details?.icon\" class=\"details-icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"description-row\">\n    <ion-col size=\"12\">\n      <h3 class=\"details-name\">\n        <app-text-shell animation=\"bouncing\" [data]=\"details?.name?.concat(' - ', details?.category)\"></app-text-shell>\n      </h3>\n      <p class=\"details-short-description\">\n        <app-text-shell animation=\"bouncing\" [data]=\"details?.shortDescription\"></app-text-shell>\n      </p>\n    </ion-col>\n    <ion-col size=\"12\">\n      <div class=\"details-score\">\n        <div class=\"score-item\">\n          <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n          <div class=\"score-value\">\n            <app-text-shell [data]=\"details?.rating\"></app-text-shell>\n          </div>\n        </div>\n        <div class=\"score-item\">\n          <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n          <div class=\"score-value\">\n            <app-text-shell [data]=\"details?.reviewsCount\"></app-text-shell>\n          </div>\n        </div>\n      </div>\n    </ion-col>\n    <ion-col size=\"12\">\n      <ion-row class=\"details-tags\">\n        <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of details?.tags\">\n          <span class=\"item-tag\">\n            <app-text-shell [data]=\"tag\"></app-text-shell>\n          </span>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n    <ion-col size=\"12\">\n      <p class=\"details-description\">\n        <app-text-shell animation=\"bouncing\" lines=\"6\" [data]=\"details?.fullDescription\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row>\n  <div class=\"open-hours-wrapper\">\n    <h3 class=\"detail-title\">When?</h3>\n    <ul class=\"schedules-list\">\n      <li class=\"open-hour-item\" *ngFor=\"let schedule of details?.openHours\">\n        <div class=\"schedule-outer\">\n          <span class=\"schedule-day\">\n            <app-text-shell [data]=\"schedule.day\"></app-text-shell>\n          </span>\n          <div class=\"schedule-hours\">\n            <ng-container *ngIf=\"schedule.open\">\n              <span class=\"schedule-value\">\n                <app-text-shell [data]=\"schedule.hourFrom\"></app-text-shell>\n              </span>\n              <span class=\"schedule-separator\">to</span>\n              <span class=\"schedule-value\">\n                <app-text-shell [data]=\"schedule.hourTo\"></app-text-shell>\n              </span>\n            </ng-container>\n            <ng-container *ngIf=\"!schedule.open\">\n              <ion-badge class=\"schedule-closed\" color=\"medium\">closed</ion-badge>\n            </ng-container>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"location-wrapper\">\n    <div class=\"location-header\">\n      <h3 class=\"detail-title\">Where?</h3>\n      <span class=\"location-address\">\n        <app-text-shell [data]=\"details.location?.address\"></app-text-shell>\n      </span>\n    </div>\n    <!-- <app-aspect-ratio [ratio]=\"{w: 64, h: 30}\">\n      <app-image-shell [src]=\"'https://maps.googleapis.com/maps/api/staticmap?center=' + details.location?.latlng + '&zoom=15&size=640x300&maptype=roadmap&format=png&visual_refresh=true&markers=size:mid%7Ccolor:0xd9453a%7C' + details.location?.latlng + '&key=YOUR_KEY_HERE'\">\n      </app-image-shell>\n    </app-aspect-ratio> -->\n    <app-aspect-ratio [ratio]=\"{w: 64, h: 30}\">\n      <app-image-shell class=\"location-image\" animation=\"spinner\" [src]=\"details.location?.mapImage\"></app-image-shell>\n    </app-aspect-ratio>\n  </div>\n  <div class=\"suggested-places-wrapper\" *ngIf=\"details?.whereToStay && details.whereToStay.length > 0\">\n    <h3 class=\"detail-alt-title\">Need a place to stay?</h3>\n    <ion-row class=\"suggested-places-row\">\n      <ion-col size=\"4\" class=\"suggested-place\" *ngFor=\"let placeToStay of details?.whereToStay\">\n        <app-aspect-ratio [ratio]=\"{w: 18, h: 23}\">\n          <app-image-shell class=\"place-picture\" animation=\"spinner\" [src]=\"placeToStay.picture\"></app-image-shell>\n        </app-aspect-ratio>\n        <div class=\"place-details\">\n          <h5 class=\"place-name\">\n            <app-text-shell [data]=\"placeToStay.name\"></app-text-shell>\n          </h5>\n          <div class=\"place-rating\">\n            <ion-icon class=\"rating-icon\" name=\"star-outline\"></ion-icon>\n            <div class=\"rating-value\">\n              <app-text-shell [data]=\"placeToStay.rating\"></app-text-shell>\n            </div>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n  <div class=\"suggested-places-wrapper\" *ngIf=\"details?.whereToEat && details.whereToEat.length > 0\">\n    <h3 class=\"detail-alt-title\">Grab a bite?</h3>\n    <ion-row class=\"suggested-places-row\">\n      <ion-col size=\"4\" class=\"suggested-place\" *ngFor=\"let placeToEat of details?.whereToEat\">\n        <app-aspect-ratio [ratio]=\"{w: 18, h: 23}\">\n          <app-image-shell class=\"place-picture\" animation=\"spinner\" [src]=\"placeToEat.picture\"></app-image-shell>\n        </app-aspect-ratio>\n        <div class=\"place-details\">\n          <h5 class=\"place-name\">\n            <app-text-shell [data]=\"placeToEat.name\"></app-text-shell>\n          </h5>\n          <div class=\"place-rating\">\n            <ion-icon class=\"rating-icon\" name=\"star-outline\"></ion-icon>\n            <div class=\"rating-value\">\n              <app-text-shell [data]=\"placeToEat.rating\"></app-text-shell>\n            </div>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n  <div class=\"related-activities-wrapper\" *ngIf=\"details?.relatedActivities && details.relatedActivities.length > 0\">\n    <h3 class=\"detail-alt-title\">More activities?</h3>\n    <ion-row class=\"related-activity\" *ngFor=\"let relatedActivity of details?.relatedActivities\">\n      <ion-col size=\"12\">\n        <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"related-activity-picture\" [src]=\"relatedActivity.picture\">\n          <app-aspect-ratio [ratio]=\"{w:64, h:23}\">\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n      <ion-col size=\"12\" class=\"activity-details\">\n        <h5 class=\"activity-name\">\n          <app-text-shell [data]=\"relatedActivity.name\"></app-text-shell>\n        </h5>\n        <span class=\"activity-category\">\n          <app-text-shell [data]=\"relatedActivity.category\"></app-text-shell>\n        </span>\n        <div class=\"activity-rating\">\n          <ion-icon class=\"rating-icon\" name=\"star-outline\"></ion-icon>\n          <div class=\"rating-value\">\n            <app-text-shell [data]=\"relatedActivity.rating\"></app-text-shell>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TravelService } from '../travel.service';\nimport { TravelDetailsModel } from './travel-details.model';\n\n@Injectable()\nexport class TravelDetailsPlainResolver implements Resolve<TravelDetailsModel> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): Observable<TravelDetailsModel> {\n    return this.travelService.getDetailsDataSource();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { TravelService } from '../travel.service';\nimport { TravelDetailsModel } from './travel-details.model';\n\n@Injectable()\nexport class TravelDetailsResolver implements Resolve<DataStore<TravelDetailsModel>> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): DataStore<TravelDetailsModel> {\n    const dataSource: Observable<TravelDetailsModel> = this.travelService.getDetailsDataSource();\n    const dataStore: DataStore<TravelDetailsModel> = this.travelService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}