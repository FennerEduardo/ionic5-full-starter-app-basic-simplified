{"version":3,"sources":["webpack:///src/app/deals/listing/deals-listing.module.ts","webpack:///src/app/deals/listing/deals-listing.page.ts","webpack:///src/app/deals/listing/deals-listing.page.html","webpack:///src/app/deals/listing/deals-listing.resolver.ts"],"names":["routes","path","component","resolve","data","DealsListingPageModule","forChild","imports","declarations","providers","DealsListingPage","route","subscriptions","subscribe","resolvedRouteData","extractData","state","listing","error","unsubscribe","isShell","selector","templateUrl","styleUrls","DealsListingResolver","dealsService","dataSource","getListingDataSource","dataStore","getListingStore"],"mappings":"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","file":"deals-listing-deals-listing-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { DealsService } from '../deals.service';\nimport { DealsListingPage } from './deals-listing.page';\nimport { DealsListingResolver } from './deals-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DealsListingPage,\n    resolve: {\n      data: DealsListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    DealsListingPage\n  ],\n  providers: [\n    DealsListingResolver,\n    DealsService\n  ]\n})\nexport class DealsListingPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { DealsListingModel } from './deals-listing.model';\n\n@Component({\n  selector: 'app-deals-listing',\n  templateUrl: './deals-listing.page.html',\n  styleUrls: [\n    './styles/deals-listing.page.scss',\n    './styles/deals-listing.shell.scss',\n    './styles/deals-listing.ios.scss'\n  ]\n})\nexport class DealsListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: DealsListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<DealsListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<DealsListingModel>(resolvedRouteData.data, DealsListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Deals Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"deals-listing-content\">\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\" [ngClass]=\"{'ended': ((item.expirationDate | appTimeDifference) < 0), 'imminent-end': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2), 'ends-soon': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) > 2 && (item.expirationDate | appTimeDifference) < 10), 'distant-end': ((item.expirationDate | appTimeDifference) >= 10)}\">\n      <ion-row class=\"top-row\">\n        <ion-col class=\"logo-col\" size=\"6\">\n          <app-aspect-ratio [ratio]=\"{w: 128, h: 32}\">\n            <app-image-shell [src]=\"item.logo\" [alt]=\"'deals logo'\" class=\"deal-logo\" animation=\"spinner\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col *ngIf=\"((item.expirationDate | appTimeDifference) > 0)\" class=\"call-to-action-col\">\n          <ion-button class=\"claim-button\" expand=\"block\" color=\"claim\" [routerLink]=\"['/app/categories/deals/', item.slug]\">\n            <span class=\"button-cta\">CLAIM</span>\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col *ngIf=\"((item.expirationDate | appTimeDifference) < 0)\" class=\"call-to-action-col\">\n          <span class=\"expired-cta\">EXPIRED</span>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"middle-row\">\n        <ion-col class=\"info-col\">\n          <h4 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/deals/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item.name\"></app-text-shell>\n            </a>\n          </h4>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.description\"></app-text-shell>\n          </p>\n        </ion-col>\n        <ion-col size=\"2\">\n          <ion-button class=\"bookmark-button\" expand=\"block\" fill=\"clear\" color=\"claim\">\n            <ion-icon slot=\"icon-only\" name=\"pricetag\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"bottom-row\">\n        <ion-col class=\"code-wrapper\">\n          <span class=\"code-cta\">Use this code:</span>\n          <span class=\"item-code\" [ngClass]=\"{'expired': ((item.expirationDate | appTimeDifference) < 0)}\">\n            <app-text-shell [data]=\"item.code\"></app-text-shell>\n          </span>\n        </ion-col>\n        <ion-col class=\"time-left-wrapper\" size=\"5\" [ngClass]=\"{'countdown-active': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)}\">\n          <span class=\"expiration-cta\">DEAL {{ ((item.expirationDate | appTimeDifference) < 0) ? 'EXPIRED' : 'EXPIRES IN' }}:</span>\n          <ng-container *ngIf=\"((item.expirationDate | appTimeDifference) < 0 || (item.expirationDate | appTimeDifference) > 2)\">\n            <span class=\"item-time-left\">\n              <app-text-shell [data]=\"(item.expirationDate | appTimeAgo)\"></app-text-shell>\n            </span>\n          </ng-container>\n          <ng-container *ngIf=\"((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)\">\n            <ion-row class=\"countdown-wrapper\">\n              <app-countdown-timer class=\"item-countdown\" fill=\"inner-time\" [end]=\"item.expirationDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\n            </ion-row>\n          </ng-container>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { DealsService } from '../deals.service';\nimport { DealsListingModel } from './deals-listing.model';\n\n@Injectable()\nexport class DealsListingResolver implements Resolve<DataStore<DealsListingModel>> {\n\n  constructor(private dealsService: DealsService) {}\n\n  resolve(): DataStore<DealsListingModel> {\n    const dataSource: Observable<DealsListingModel> = this.dealsService.getListingDataSource();\n    const dataStore: DataStore<DealsListingModel> = this.dealsService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}