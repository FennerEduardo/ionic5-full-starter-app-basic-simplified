{"version":3,"sources":["webpack:///src/app/food/details/food-details.module.ts","webpack:///src/app/food/details/food-details.page.ts","webpack:///src/app/food/details/food-details.page.html","webpack:///src/app/food/details/food-details.resolver.ts"],"names":["routes","path","component","resolve","data","FoodDetailsPageModule","forChild","imports","declarations","providers","FoodDetailsPage","route","subscriptions","subscribe","resolvedRouteData","extractData","state","details","error","unsubscribe","isShell","selector","templateUrl","styleUrls","FoodDetailsResolver","foodService","itemSlug","paramMap","get","dataSource","getDetailsDataSource","dataStore","getDetailsStore"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,kEAFb;AAGEC,aAAO,EAAE;AACPC,YAAI,EAAE;AADC;AAHX,KADqB,CAAvB;;QA4BaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,iBALrB,CACT,2EADS,EAET,yDAFS,C;AAGV,gBAfQ,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBN,MAAtB,CAJO,EAKP,8EALO,EAMP,+DANO,EAOP,qEAPO,CAeR;;;;0HAEUK,qB,EAAqB;AAAA,uBAP9B,kEAO8B;AAPf,kBATf,4DASe,EARf,0DAQe,EAPf,0DAOe,EAPJ,4DAOI,EALf,8EAKe,EAJf,+DAIe,EAHf,qEAGe;AAOe,O;AAVd,K;;;;;sEAUPA,qB,EAAqB;cAlBjC,sDAkBiC;eAlBxB;AACRE,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaD,QAAb,CAAsBN,MAAtB,CAJO,EAKP,8EALO,EAMP,+DANO,EAOP,qEAPO,CADD;AAURQ,sBAAY,EAAE,CACZ,kEADY,CAVN;AAaRC,mBAAS,EAAE,CACT,2EADS,EAET,yDAFS;AAbH,S;AAkBwB,Q;;;;;;;;;;;;;;;;;;AC3ClC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCQ;;AAA8E;;AAAC;;;;;;AAC/E;;AAA4F;;AAAC;;;;;;AAS3F;;;;;;AAAoD;;;;;;AADtD;;AACE;;AACA;;AACE;;AACF;;AACF;;;;;;AAJY;;AAAA;;AAEQ;;AAAA;;;;;;AAqBhB;;AACE;;AACE;;AACF;;AACA;;AAAiC;;AAAE;;AACnC;;AACE;;AACF;;AACF;;;;;;AANoB;;AAAA;;AAIA;;AAAA;;;;;;AAGpB;;AACE;;AAAkD;;AAAM;;AAC1D;;;;;;AAjBN;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AASA;;AAGF;;AACF;;AACF;;;;;;AAjBsB;;AAAA;;AAGF;;AAAA;;AASA;;AAAA;;;;;;AAwBtB;;AACE;;AACE;;AACF;;AACF;;;;;;AAFoB;;AAAA;;;;;;AAYhB;;AACE;;AAA6B;;AAAwC;;AACvE;;;;;;AAD+B;;AAAA;;;;;;;;;;;;;AALjC;;AACE;;AACE;;AACF;;AACA;;AAGF;;;;;;;;;AANoB;;AAAA;;AAC4B;;AAAA,qFAAe,KAAf,EAAe,YAAf;;AAEjB;;AAAA;;;;;;AASjC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACF;;AACF;;;;;;AAVsB;;AAAA;;AAEsC;;AAAA;;AAItC;;AAAA;;;;;;AAoDd;;;;;;AAAoD;;;;;;AADtD;;AACE;;AACA;;AACE;;AACF;;AACF;;;;;;AAJY;;AAAA;;AAEQ;;AAAA;;;;;;AA5CxB;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACA;;AACE;;AACF;;AACA;;AAA0B;;AAAO;;AACnC;;AACA;;AACE;;AACA;;AACE;;AACF;;AACA;;AAA0B;;AAAM;;AAClC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAMF;;AACF;;;;;;AA7CwB;;AAAA;;AAC2B;;AAAA,+FAAyB,KAAzB,EAAyB,mBAAzB;;AAK3B;;AAAA;;AAMI;;AAAA;;AAOA;;AAAA;;AAQJ;;AAAA;;AAES;;AAAA;;AACT;;AAAA;;AAKJ;;AAAA;;AAGyB;;AAAA;;;;;;;;;;;;;AAqB7C;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AAAyB;;AAAM;;AAC/B;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACD;;AACH;;AACA;;AACA;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;;;AA3C8C;;AAAA,qFAAmB,KAAnB,EAAmB,wBAAnB;;AACxB;;AAAA;;AAIA;;AAAA;;AAC4B;;AAAA,4JAA2B,KAA3B,EAA2B,YAA3B;;AAO5B;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAQE;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QDrOjBC,e;AAUX,+BAAoBC,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AAA0B;;;;mCAEtC;AAAA;;AACN;AACA,eAAKC,aAAL,GAAqB,KAAKD,KAAL,CAAWP,IAAX,CACpBS,SADoB,CAEnB,UAACC,iBAAD,EAA6D;AAC3D;AACA,iBAAI,CAACF,aAAL,GAAqB,sEAAeG,WAAf,CAA6CD,iBAAiB,CAACV,IAA/D,EAAqE,oEAArE,EACpBS,SADoB,CAEnB,UAACG,KAAD,EAAW;AACT,mBAAI,CAACC,OAAL,GAAeD,KAAf;AACD,aAJkB,EAKnB,UAACE,KAAD,EAAW,CAAE,CALM,CAArB;AAOD,WAXkB,EAYnB,UAACA,KAAD,EAAW,CAAE,CAZM,CAArB;AAcD,S,CAED;AACA;;;;2CACgB;AACd;AACA,eAAKN,aAAL,CAAmBO,WAAnB;AACD;;;4BA7B4C;AAC3C,iBAAQ,KAAKF,OAAL,IAAgB,KAAKA,OAAL,CAAaG,OAA9B,GAAyC,IAAzC,GAAgD,KAAvD;AACD;;;;;;;uBARUV,e,EAAe,+H;AAAA,K;;;YAAfA,e;AAAe,uC;AAAA,iB;AAAA;AAAA;;;;;;;;;ACf5B;;AACE;;AACE;;AACE;;AACF;;AACA;;AAAW;;AAAY;;AACzB;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;;;AACE;;AACF;;AACA;;AAMA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAyB;;AAAS;;AAClC;;AACE;;AAqBF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AACE;;AACF;;AACF;;AAKA;;AACE;;AACF;;AACF;;AACA;;AACE;;AAKF;;AACA;;AACA;;AACE;;AAAyB;;AAAa;;AACtC;;AACE;;AAQF;;AACA;;AAAkF;;AAAY;;AAChG;;AACA;;AACE;;AAAyB;;AAAc;;AACvC;;AAcF;;AACA;;AACA;;AACE;;AAAyB;;AAAO;;AAChC;;AACE;;AAiDF;;AACA;;AACA;;AAA6E;;AAAiD;;AAC9H;;AACA;;AAA+E;;AAAc;;AAC/F;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AA6CF;;AACF;;AACF;;;;AA/OuB;;AAAA,uFAAmB,KAAnB,EAAmB,sDAAnB;;AACG;;AAAA;;AAEI;;AAAA;;AACoB;;AAAA;;AAU1B;;AAAA;;AAGA;;AAAA;;AAKI;;AAAA;;AACG;;AAAA;;AAKQ;;AAAA;;AACb;;AAAA;;AAE2B;;AAAA;;AASzB;;AAAA;;AASK;;AAAA;;AA2BT;;AAAA;;AAOF;;AAAA;;AAC4C;;AAAA,+IAAkC,KAAlC,EAAkC,cAAlC;;AAIjC;;AAAA;;AAUe;;AAAA;;AAad;;AAAA;;AAmBH;;AAAA;;AAmDkD;;AAAA;;AAOzE;;AAAA;;AAIuB;;AAAA;;;;;;;;;;sED7LlBA,e,EAAe;cAR3B,uDAQ2B;eARjB;AACTW,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CACT,iCADS,EAET,kCAFS;AAHF,S;AAQiB,Q;;;;;;gBAMzB,yD;iBAAY,gB;;;;;;;;;;;;;;;;;;;;AErBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,mB;AAEX,mCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;gCAExCd,K,EAA6B;AACnC,cAAMe,QAAQ,GAAGf,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmB,WAAnB,CAAjB;AAEA,cAAMC,UAAU,GAAiC,KAAKJ,WAAL,CAAiBK,oBAAjB,CAAsCJ,QAAtC,CAAjD;AACA,cAAMK,SAAS,GAAgC,KAAKN,WAAL,CAAiBO,eAAjB,CAAiCH,UAAjC,CAA/C;AAEA,iBAAOE,SAAP;AACD;;;;;;;uBAXUP,mB,EAAmB,iH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q","file":"food-details-food-details-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { FoodService } from '../food.service';\nimport { FoodDetailsPage } from './food-details.page';\nimport { FoodDetailsResolver } from './food-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodDetailsPage,\n    resolve: {\n      data: FoodDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    FoodDetailsPage\n  ],\n  providers: [\n    FoodDetailsResolver,\n    FoodService\n  ]\n})\nexport class FoodDetailsPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { FoodDetailsModel } from './food-details.model';\n\n@Component({\n  selector: 'app-food-details',\n  templateUrl: './food-details.page.html',\n  styleUrls: [\n    './styles/food-details.page.scss',\n    './styles/food-details.shell.scss'\n  ]\n})\nexport class FoodDetailsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  details: FoodDetailsModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.details && this.details.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<FoodDetailsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<FoodDetailsModel>(resolvedRouteData.data, FoodDetailsModel)\n        .subscribe(\n          (state) => {\n            this.details = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories/food\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Food Details</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"food-details-content\">\n  <ion-row class=\"image-row\">\n    <ion-col size=\"12\">\n      <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"add-overlay showcase-image\" [src]=\"details?.showcaseImage\">\n        <app-aspect-ratio [ratio]=\"{w:64, h:40}\">\n          <div class=\"icon-wrapper\">\n            <app-aspect-ratio [ratio]=\"{w: 40, h: 20}\">\n              <app-image-shell class=\"icon-image\" [src]=\"details?.icon\"></app-image-shell>\n            </app-aspect-ratio>\n          </div>\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"description-row\">\n    <ion-col size=\"9\">\n      <h3 class=\"details-name\">\n        <app-text-shell [data]=\"details?.name\"></app-text-shell>\n      </h3>\n      <p class=\"details-style\">\n        <app-text-shell [data]=\"details?.style\"></app-text-shell>\n      </p>\n    </ion-col>\n    <ion-col size=\"3\">\n      <div class=\"details-price-range\">\n        <span class=\"price\" *ngFor=\"let price of [].constructor(details?.priceRange)\">$</span>\n        <span class=\"no-price\" *ngFor=\"let price of [].constructor(5 - (details?.priceRange || 1))\">$</span>\n      </div>\n    </ion-col>\n    <ion-col size=\"12\">\n      <ion-row class=\"details-scores restaurant-scores\">\n        <div class=\"restaurant-rating\" [attr.ratingBase]=\"details?.avgRating | floor\">\n          <app-text-shell [data]=\"details?.avgRating\"></app-text-shell>\n        </div>\n        <ion-col class=\"score-item restaurant-score\" *ngFor=\"let rating of details?.ratings\">\n          <ion-icon *ngIf=\"rating.concept\" class=\"score-icon\" [src]=\"(rating.concept) ? './assets/custom-icons/food/' + rating.concept + '-rate.svg' : ''\"></ion-icon>\n          <div class=\"score-value\">\n            <app-text-shell [data]=\"rating.rate\"></app-text-shell>\n          </div>\n        </ion-col>\n        <ion-col class=\"score-item restaurant-score reviews-count\">\n          <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/reviews.svg\"></ion-icon>\n          <div class=\"score-value\">\n            <app-text-shell [data]=\"details?.reviewsCount\"></app-text-shell>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n  <div class=\"open-hours-wrapper\">\n    <h3 class=\"detail-title\">Schedules</h3>\n    <ul class=\"schedules-list\">\n      <li class=\"open-hour-item\" *ngFor=\"let schedule of details?.openHours\">\n        <div class=\"schedule-outer\">\n          <span class=\"schedule-day\">\n            <app-text-shell [data]=\"schedule.day\"></app-text-shell>\n          </span>\n          <div class=\"schedule-hours\">\n            <ng-container *ngIf=\"schedule.open\">\n              <span class=\"schedule-value\">\n                <app-text-shell [data]=\"schedule.hourFrom\"></app-text-shell>\n              </span>\n              <span class=\"schedule-separator\">to</span>\n              <span class=\"schedule-value\">\n                <app-text-shell [data]=\"schedule.hourTo\"></app-text-shell>\n              </span>\n            </ng-container>\n            <ng-container *ngIf=\"!schedule.open\">\n              <ion-badge class=\"schedule-closed\" color=\"medium\">closed</ion-badge>\n            </ng-container>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"location-wrapper\">\n    <div class=\"location-header\">\n      <h3 class=\"detail-title\">Address</h3>\n      <span class=\"location-address\">\n        <app-text-shell [data]=\"details.location?.address\"></app-text-shell>\n      </span>\n    </div>\n    <!-- <app-aspect-ratio [ratio]=\"{w: 64, h: 20}\">\n      <app-image-shell [src]=\"'https://maps.googleapis.com/maps/api/staticmap?center=' + details.location?.latlng + '&zoom=15&size=640x200&maptype=roadmap&format=png&visual_refresh=true&markers=size:mid%7Ccolor:0xd9453a%7C' + details.location?.latlng + '&key=YOUR_KEY_HERE'\">\n      </app-image-shell>\n    </app-aspect-ratio> -->\n    <app-aspect-ratio [ratio]=\"{w: 64, h: 20}\">\n      <app-image-shell class=\"location-image\" animation=\"spinner\" [src]=\"details.location?.mapImage\" [alt]=\"'location map'\"></app-image-shell>\n    </app-aspect-ratio>\n  </div>\n  <ion-row class=\"details-tags\">\n    <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of details?.tags\">\n      <span class=\"item-tag\">\n        <app-text-shell [data]=\"tag\"></app-text-shell>\n      </span>\n    </ion-col>\n  </ion-row>\n  <hr class=\"details-divider\">\n  <div class=\"users-pictures-wrapper\">\n    <h3 class=\"detail-title\">User's photos</h3>\n    <ion-row class=\"pictures-row\">\n      <ion-col class=\"picture-wrapper\" size=\"2\" *ngFor=\"let picture of details?.usersPictures?.slice(0, 5); let i = index\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell class=\"user-picture-image\" [src]=\"picture\" [alt]=\"'user image'\"></app-image-shell>\n        </app-aspect-ratio>\n        <a class=\"has-more-pictures\" *ngIf=\"i == 4 && details?.usersPictures?.length > 5\">\n          <span class=\"pictures-count\">{{ details?.usersPictures?.length - 5 }}</span>\n        </a>\n      </ion-col>\n    </ion-row>\n    <ion-button class=\"upload-picture-btn\" color=\"dark\" expand=\"block\" fill=\"outline\">Upload photo</ion-button>\n  </div>\n  <div class=\"popular-dishes-wrapper\">\n    <h3 class=\"detail-title\">Popular dishes</h3>\n    <ion-row class=\"popular-dish\" *ngFor=\"let dish of details?.popularDishes\">\n      <ion-col size=\"9\">\n        <span class=\"dish-name\">\n          <app-text-shell [data]=\"dish.name\"></app-text-shell>\n        </span>\n        <ion-progress-bar class=\"dish-score\" type=\"determinate\" [value]=\"(dish.rate / 5)\"></ion-progress-bar>\n      </ion-col>\n      <ion-col size=\"3\" class=\"dish-votes-count\">\n        <div class=\"dish-votes-value\">\n          <app-text-shell [data]=\"dish.votesCount\"></app-text-shell>\n        </div>\n        <ion-icon class=\"dish-votes-icon\" name=\"heart-outline\"></ion-icon>\n      </ion-col>\n    </ion-row>\n  </div>\n  <hr class=\"details-divider\">\n  <div class=\"reviews-wrapper\">\n    <h3 class=\"detail-title\">Reviews</h3>\n    <div class=\"reviews-list\">\n      <div class=\"review-item\" *ngFor=\"let review of details?.reviews\">\n        <ion-row class=\"review-user\">\n          <ion-col size=\"2\" class=\"user-image-wrapper\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"review-user-image\" [src]=\"review.user.image\" [alt]=\"'review user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"user-brief-wrapper\">\n            <h5 class=\"review-user-name\">\n              <app-text-shell [data]=\"review.user.name\"></app-text-shell>\n            </h5>\n            <ion-row class=\"details-scores user-scores\">\n              <ion-col class=\"score-item user-score\">\n                <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/reviews.svg\"></ion-icon>\n                <div class=\"score-value\">\n                  <app-text-shell [data]=\"review.user.reviewsCount\"></app-text-shell>\n                </div>\n                <span class=\"score-title\">Reviews</span>\n              </ion-col>\n              <ion-col class=\"score-item user-score\">\n                <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/points.svg\"></ion-icon>\n                <div class=\"score-value\">\n                  <app-text-shell [data]=\"review.user.points\"></app-text-shell>\n                </div>\n                <span class=\"score-title\">Points</span>\n              </ion-col>\n            </ion-row>\n          </ion-col>\n          <ion-col class=\"review-info-wrapper\">\n            <span class=\"review-date\">\n              <app-text-shell [data]=\"review.publishedAt\"></app-text-shell>\n            </span>\n            <div class=\"review-rating\" [attr.ratingBase]=\"review.avgRating | floor\">\n              <app-text-shell [data]=\"review.avgRating\"></app-text-shell>\n            </div>\n          </ion-col>\n        </ion-row>\n        <p class=\"review-message\">\n          <app-text-shell [data]=\"review.message\" lines=\"5\"></app-text-shell>\n        </p>\n        <ion-row class=\"details-scores review-scores\">\n          <ion-col class=\"score-item review-score\" *ngFor=\"let rating of review.ratings\">\n            <ion-icon *ngIf=\"rating.concept\" class=\"score-icon\" [src]=\"(rating.concept) ? './assets/custom-icons/food/' + rating.concept + '-rate.svg' : ''\"></ion-icon>\n            <div class=\"score-value\">\n              <app-text-shell [data]=\"rating.rate\"></app-text-shell>\n            </div>\n          </ion-col>\n        </ion-row>\n      </div>\n    </div>\n    <hr class=\"details-divider\">\n    <ion-button class=\"all-reviews-btn\" color=\"dark\" expand=\"block\" fill=\"clear\">READ ALL REVIEWS ({{ details?.reviews?.length }})</ion-button>\n    <hr class=\"details-divider\">\n    <ion-button class=\"write-reviews-btn\" color=\"dark\" expand=\"block\" fill=\"solid\">Write a review</ion-button>\n  </div>\n  <div class=\"recipes-wrapper\">\n    <div class=\"recipes-header\">\n      <h3 class=\"detail-title\">\n        {{ details?.shortName }} famous recipes\n      </h3>\n    </div>\n    <div class=\"recipes-list\">\n      <div class=\"recipe-item\" *ngFor=\"let recipe of details?.popularRecipes\">\n        <app-image-shell class=\"recipe-cover-image\" [display]=\"'cover'\" [src]=\"recipe.showcaseImage\">\n          <app-aspect-ratio [ratio]=\"{w:64, h:30}\">\n          </app-aspect-ratio>\n        </app-image-shell>\n        <div class=\"chef-picture-wrapper\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"chef-picture-image\" [src]=\"recipe?.chef?.image\" [alt]=\"'chef image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </div>\n        <h4 class=\"recipe-title\">RECIPE</h4>\n        <hr class=\"details-divider\">\n        <div class=\"recipe-call-to-action\">\n          <span class=\"recipe-author\">\n            <app-text-shell [data]=\"details?.shortName?.concat(' famous')\"></app-text-shell>\n          </span>\n          <h3 class=\"recipe-name\">\n            <app-text-shell [data]=\"recipe.name\"></app-text-shell>\n          </h3>\n          <span class=\"recipe-chef\">\n            <app-text-shell [data]=\"(recipe.chef) ? 'By chef'.concat(' ', recipe?.chef?.name) : null\"></app-text-shell>\n           </span>\n        </div>\n        <hr class=\"details-divider\">\n        <ion-row class=\"details-scores recipe-attributes\">\n          <ion-col class=\"score-item attribute-score\">\n            <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/difficulty.svg\"></ion-icon>\n            <div class=\"score-value\">\n              <app-text-shell [data]=\"recipe.difficulty\"></app-text-shell>\n            </div>\n          </ion-col>\n          <ion-col class=\"score-item attribute-score\">\n            <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/cooking-time.svg\"></ion-icon>\n            <div class=\"score-value\">\n              <app-text-shell [data]=\"recipe.time\"></app-text-shell>\n            </div>\n          </ion-col>\n          <ion-col class=\"score-item attribute-score\">\n            <ion-icon class=\"score-icon\" src=\"./assets/custom-icons/food/calories.svg\"></ion-icon>\n            <div class=\"score-value\">\n              <app-text-shell [data]=\"recipe.calories\"></app-text-shell>\n            </div>\n          </ion-col>\n        </ion-row>\n      </div>\n    </div>\n  </div>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FoodService } from '../food.service';\nimport { FoodDetailsModel } from './food-details.model';\n\n@Injectable()\nexport class FoodDetailsResolver implements Resolve<DataStore<FoodDetailsModel>> {\n\n  constructor(private foodService: FoodService) {}\n\n  resolve(route: ActivatedRouteSnapshot): DataStore<FoodDetailsModel> {\n    const itemSlug = route.paramMap.get('productId');\n\n    const dataSource: Observable<FoodDetailsModel> = this.foodService.getDetailsDataSource(itemSlug);\n    const dataStore: DataStore<FoodDetailsModel> = this.foodService.getDetailsStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]}