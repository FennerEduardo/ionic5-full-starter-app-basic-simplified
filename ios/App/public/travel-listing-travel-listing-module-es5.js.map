{"version":3,"sources":["webpack:///src/app/shell/data-store.ts","webpack:///src/app/travel/listing/travel-listing.module.ts","webpack:///src/app/travel/listing/travel-listing.page.ts","webpack:///src/app/travel/listing/travel-listing.page.html","webpack:///src/app/travel/listing/travel-listing.plain.resolver.ts","webpack:///src/app/travel/listing/travel-listing.resolver.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["ShellModel","isShell","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","subscribe","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","routes","path","component","resolve","data","TravelListingPageModule","forChild","imports","declarations","providers","TravelListingPage","route","subscriptions","resolvedRouteData","extractData","state","listing","error","unsubscribe","selector","templateUrl","styleUrls","TravelListingPlainResolver","travelService","getListingDataSource","TravelListingResolver","dataSource","dataStore","getListingStore","ResolverHelper","source","constructor"],"mappings":"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","file":"travel-listing-travel-listing-module-es5.js","sourcesContent":["import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { TravelService } from '../travel.service';\nimport { TravelListingPage } from './travel-listing.page';\nimport { TravelListingResolver } from './travel-listing.resolver';\nimport { TravelListingPlainResolver } from './travel-listing.plain.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TravelListingPage,\n    resolve: {\n      data: TravelListingResolver\n      // data: TravelListingPlainResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    TravelListingPage\n  ],\n  providers: [\n    TravelListingResolver,\n    TravelListingPlainResolver,\n    TravelService\n  ]\n})\nexport class TravelListingPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { TravelListingModel } from './travel-listing.model';\n// import { delay, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-travel-listing',\n  templateUrl: './travel-listing.page.html',\n  styleUrls: [\n    './styles/travel-listing.page.scss',\n    './styles/travel-listing.shell.scss'\n  ]\n})\nexport class TravelListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: TravelListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    // .pipe(\n    //   delay(2000),\n    //   finalize(() => console.log('dataSubscription [finalize()]'))\n    // )\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<TravelListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<TravelListingModel>(resolvedRouteData.data, TravelListingModel)\n        // .pipe(\n        //   delay(8000),\n        //   finalize(() => console.log('listingDataStore.subscribe [finalize()]'))\n        // )\n        .subscribe(\n          (state) => {\n            // console.log('GOT STATE');\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Travel Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <ion-row class=\"image-row\">\n        <ion-col size=\"12\">\n          <app-image-shell [display]=\"'cover'\" class=\"add-overlay item-image\" [src]=\"item.image\" [routerLink]=\"['/app/categories/travel/', item.slug]\">\n            <app-aspect-ratio [ratio]=\"{w:3, h:2}\">\n              <div class=\"content-inside-item-image\">\n                <div class=\"item-icon\">\n                  <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n                    <app-image-shell [src]=\"item.icon\" class=\"icon-image\"></app-image-shell>\n                  </app-aspect-ratio>\n                </div>\n                <div class=\"item-cta\">\n                  <span>Explore</span>\n                  <ion-icon class=\"cta-icon\" name=\"arrow-forward\"></ion-icon>\n                </div>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"info-row\">\n        <ion-col class=\"main-info-col\">\n          <h3 class=\"item-name\">\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/travel/', item.slug]\">\n              <app-text-shell animation=\"bouncing\" [data]=\"(item?.name && item?.category) ? (item.name + ' - ' + item.category) : (item.name)\"></app-text-shell>\n            </a>\n          </h3>\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.description\" lines=\"3\"></app-text-shell>\n          </p>\n          <p class=\"item-address\">\n            <app-text-shell animation=\"bouncing\" [data]=\"item.address\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"stats-row\">\n        <ion-col size=\"2\" class=\"item-rating\">\n          <span class=\"rating-value\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/star.svg\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"2\" class=\"item-reviews\">\n          <span class=\"reviews-count\">\n            <app-text-shell [data]=\"item.reviewsCount\"></app-text-shell>\n          </span>\n          <ion-icon class=\"stats-icon\" src=\"./assets/custom-icons/travel/comments.svg\"></ion-icon>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TravelService } from '../travel.service';\nimport { TravelListingModel } from './travel-listing.model';\n\n@Injectable()\nexport class TravelListingPlainResolver implements Resolve<TravelListingModel> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): Observable<TravelListingModel> {\n    return this.travelService.getListingDataSource();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { TravelService } from '../travel.service';\nimport { TravelListingModel } from './travel-listing.model';\n\n@Injectable()\nexport class TravelListingResolver implements Resolve<DataStore<TravelListingModel>> {\n\n  constructor(private travelService: TravelService) {}\n\n  resolve(): DataStore<TravelListingModel> {\n    const dataSource: Observable<TravelListingModel> = this.travelService.getListingDataSource();\n    const dataStore: DataStore<TravelListingModel> = this.travelService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}