{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js","node_modules/@ionic/core/dist/esm/haptic-c8f1473e.js","node_modules/@ionic/core/dist/esm/index-3476b023.js","node_modules/@ionic/core/dist/esm/index-3528f139.js","node_modules/@ionic/core/dist/esm/spinner-configs-28520d80.js","node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js","src/app/deals/deals.service.ts","src/app/deals/details/deals-details.model.ts","src/app/deals/listing/deals-listing.model.ts","src/app/fashion/details/fashion-details.model.ts","src/app/fashion/fashion.service.ts","src/app/fashion/listing/fashion-listing.model.ts","src/app/food/details/food-details.model.ts","src/app/food/food.service.ts","src/app/food/listing/food-listing.model.ts","src/app/real-estate/details/real-estate-details.model.ts","src/app/real-estate/listing/real-estate-listing.model.ts","src/app/real-estate/real-estate.service.ts","src/app/showcase/showcase-shell.model.ts","src/app/showcase/showcase.service.ts","src/app/travel/details/travel-details.model.ts","src/app/travel/listing/travel-listing.model.ts","src/app/travel/travel.service.ts","src/app/user/friends/user-friends.model.ts","src/app/user/profile/user-profile.model.ts","src/app/user/user.service.ts","src/app/validators/password.validator.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        const documentFragment = document.createDocumentFragment();\r\n        const workingDiv = document.createElement('div');\r\n        documentFragment.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(blockedTag => {\r\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                const element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                const childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        const dfChildren = getElementChildren(documentFragment);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        const fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment);\r\n        // First child is always the div we did our work in\r\n        const getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n        const attribute = element.attributes.item(i);\r\n        const attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        const attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    const childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (let i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","import { w as writeTask } from './core-80bde1aa.js';\nimport { b as LIFECYCLE_WILL_LEAVE, L as LIFECYCLE_WILL_ENTER, a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\n\nconst iosTransitionAnimation = () => import('./ios.transition-1850e475.js');\r\nconst mdTransitionAnimation = () => import('./md.transition-083fcf52.js');\r\nconst transition = (opts) => {\r\n    return new Promise((resolve, reject) => {\r\n        writeTask(() => {\r\n            beforeTransition(opts);\r\n            runTransition(opts).then(result => {\r\n                if (result.animation) {\r\n                    result.animation.destroy();\r\n                }\r\n                afterTransition(opts);\r\n                resolve(result);\r\n            }, error => {\r\n                afterTransition(opts);\r\n                reject(error);\r\n            });\r\n        });\r\n    });\r\n};\r\nconst beforeTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    setZIndex(enteringEl, leavingEl, opts.direction);\r\n    if (opts.showGoBack) {\r\n        enteringEl.classList.add('can-go-back');\r\n    }\r\n    else {\r\n        enteringEl.classList.remove('can-go-back');\r\n    }\r\n    setPageHidden(enteringEl, false);\r\n    if (leavingEl) {\r\n        setPageHidden(leavingEl, false);\r\n    }\r\n};\r\nconst runTransition = async (opts) => {\r\n    const animationBuilder = await getAnimationBuilder(opts);\r\n    const ani = (animationBuilder)\r\n        ? animation(animationBuilder, opts)\r\n        : noAnimation(opts); // fast path for no animation\r\n    return ani;\r\n};\r\nconst afterTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    enteringEl.classList.remove('ion-page-invisible');\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.classList.remove('ion-page-invisible');\r\n    }\r\n};\r\nconst getAnimationBuilder = async (opts) => {\r\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\r\n        return undefined;\r\n    }\r\n    if (opts.animationBuilder) {\r\n        return opts.animationBuilder;\r\n    }\r\n    const getAnimation = (opts.mode === 'ios')\r\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\r\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\r\n    return getAnimation;\r\n};\r\nconst animation = async (animationBuilder, opts) => {\r\n    await waitForReady(opts, true);\r\n    const trans = animationBuilder(opts.baseEl, opts);\r\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\r\n    const didComplete = await playTransition(trans, opts);\r\n    if (opts.progressCallback) {\r\n        opts.progressCallback(undefined);\r\n    }\r\n    if (didComplete) {\r\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\r\n    }\r\n    return {\r\n        hasCompleted: didComplete,\r\n        animation: trans\r\n    };\r\n};\r\nconst noAnimation = async (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    await waitForReady(opts, false);\r\n    fireWillEvents(enteringEl, leavingEl);\r\n    fireDidEvents(enteringEl, leavingEl);\r\n    return {\r\n        hasCompleted: true\r\n    };\r\n};\r\nconst waitForReady = async (opts, defaultDeep) => {\r\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\r\n    const promises = deep ? [\r\n        deepReady(opts.enteringEl),\r\n        deepReady(opts.leavingEl),\r\n    ] : [\r\n        shallowReady(opts.enteringEl),\r\n        shallowReady(opts.leavingEl),\r\n    ];\r\n    await Promise.all(promises);\r\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\r\n};\r\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\r\n    if (viewIsReady) {\r\n        await viewIsReady(enteringEl);\r\n    }\r\n};\r\nconst playTransition = (trans, opts) => {\r\n    const progressCallback = opts.progressCallback;\r\n    const promise = new Promise(resolve => {\r\n        trans.onFinish((currentStep) => resolve(currentStep === 1));\r\n    });\r\n    // cool, let's do this, start the transition\r\n    if (progressCallback) {\r\n        // this is a swipe to go back, just get the transition progress ready\r\n        // kick off the swipe animation start\r\n        trans.progressStart(true);\r\n        progressCallback(trans);\r\n    }\r\n    else {\r\n        // only the top level transition should actually start \"play\"\r\n        // kick it off and let it play through\r\n        // ******** DOM WRITE ****************\r\n        trans.play();\r\n    }\r\n    // create a callback for when the animation is done\r\n    return promise;\r\n};\r\nconst fireWillEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\r\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\r\n};\r\nconst fireDidEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\r\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\r\n};\r\nconst lifecycle = (el, eventName) => {\r\n    if (el) {\r\n        const ev = new CustomEvent(eventName, {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        el.dispatchEvent(ev);\r\n    }\r\n};\r\nconst shallowReady = (el) => {\r\n    if (el && el.componentOnReady) {\r\n        return el.componentOnReady();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst deepReady = async (el) => {\r\n    const element = el;\r\n    if (element) {\r\n        if (element.componentOnReady != null) {\r\n            const stencilEl = await element.componentOnReady();\r\n            if (stencilEl != null) {\r\n                return;\r\n            }\r\n        }\r\n        await Promise.all(Array.from(element.children).map(deepReady));\r\n    }\r\n};\r\nconst setPageHidden = (el, hidden) => {\r\n    if (hidden) {\r\n        el.setAttribute('aria-hidden', 'true');\r\n        el.classList.add('ion-page-hidden');\r\n    }\r\n    else {\r\n        el.hidden = false;\r\n        el.removeAttribute('aria-hidden');\r\n        el.classList.remove('ion-page-hidden');\r\n    }\r\n};\r\nconst setZIndex = (enteringEl, leavingEl, direction) => {\r\n    if (enteringEl !== undefined) {\r\n        enteringEl.style.zIndex = (direction === 'back')\r\n            ? '99'\r\n            : '101';\r\n    }\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.style.zIndex = '100';\r\n    }\r\n};\r\nconst getIonPageElement = (element) => {\r\n    if (element.classList.contains('ion-page')) {\r\n        return element;\r\n    }\r\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\r\n    if (ionPage) {\r\n        return ionPage;\r\n    }\r\n    // idk, return the original element so at least something animates and we don't have a null pointer\r\n    return element;\r\n};\n\nexport { deepReady as d, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t };\n","const spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 48,\r\n                cy: 48,\r\n                fill: 'none',\r\n                viewBox: '24 24 48 48',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { DealsListingModel } from './listing/deals-listing.model';\nimport { DealsDetailsModel } from './details/deals-details.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class DealsService {\n  private listingDataStore: DataStore<DealsListingModel>;\n  private detailsDataStore: DataStore<DealsDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  public getListingDataSource(): Observable<DealsListingModel> {\n    return this.http.get<DealsListingModel>('./assets/sample-data/deals/listing.json').pipe(\n      map(listingData => {\n        // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n        const {items, ...otherData} = listingData;\n\n        const itemsWithRelativeDates = items.map((dealItem, index) => {\n          // Relative date (better to showcase UI micro-interactions)\n          return {...dealItem, expirationDate: this.relativeDates[index]};\n        });\n        // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n        return {...otherData, items: itemsWithRelativeDates};\n      })\n    );\n  }\n\n  public getListingStore(dataSource: Observable<DealsListingModel>): DataStore<DealsListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: DealsListingModel = new DealsListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<DealsDetailsModel> {\n    return this.http.get<DealsDetailsModel>('./assets/sample-data/deals/details.json').pipe(\n      map(detailsData => {\n        const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        return {...detailsData, expirationDate};\n      })\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<DealsDetailsModel>): DataStore<DealsDetailsModel> {\n\n    // Initialize the model specifying that it is a shell model\n    const shellModel: DealsDetailsModel = new DealsDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsDetailsModel extends ShellModel {\n  showcaseImages: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  previewImage: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '03/03/2019';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class DealsItemModel {\n  slug: string;\n  logo: string;\n  name: string;\n  code: string;\n  description: string;\n  // Default mock value\n  // expirationDate = '12/01/2018';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\nexport class DealsListingModel extends ShellModel {\n  items: Array<DealsItemModel> = [\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel(),\n    new DealsItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionDetailsModel extends ShellModel {\n  showcaseImages: Array<{type: string, source: string}> = [\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    },\n    {\n      type: '',\n      source: ''\n    }\n  ];\n  name: string;\n  brand: string;\n  price: number;\n  salePrice: number;\n  colorVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  sizeVariants: Array<{name: string, value: string, default: boolean}> = [\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    },\n    {\n      name: '',\n      value: '',\n      default: false\n    }\n  ];\n  description: string;\n  careInstructions: string;\n  upc: string;\n  relatedProducts: Array<{id: number}> = [\n    {\n      id: null\n    },\n    {\n      id: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { FashionListingModel } from './listing/fashion-listing.model';\nimport { FashionDetailsModel } from './details/fashion-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class FashionService {\n  private listingDataStore: DataStore<FashionListingModel>;\n  private detailsDataStore: DataStore<FashionDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<FashionListingModel> {\n    return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<FashionListingModel>): DataStore<FashionListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionListingModel = new FashionListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<FashionDetailsModel> {\n    return this.http.get<FashionDetailsModel>('./assets/sample-data/fashion/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<FashionDetailsModel>): DataStore<FashionDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FashionDetailsModel = new FashionDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FashionItemModel {\n  price: number;\n  salePrice: number;\n  image: string;\n  squareImage: string;\n  showcaseImages: Array<string>;\n  name: string;\n  style: string;\n  relatedProducts: Array<string>;\n}\n\nexport class FashionListingModel extends ShellModel {\n  items: Array<FashionItemModel> = [\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel(),\n    new FashionItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FoodDetailsModel extends ShellModel {\n  icon: string;\n  slug: string;\n  showcaseImage: string;\n  name: string;\n  shortName: string;\n  style: string;\n  priceRange: number;\n  avgRating: number;\n  ratings: Array<{concept: string, rate: number}> = [\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    },\n    {\n      concept: '',\n      rate: null\n    }\n  ];\n  reviewsCount: number;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  usersPictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n  popularDishes: Array<{name: string, rate: number, votesCount: number}> = [\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    },\n    {\n      name: '',\n      rate: null,\n      votesCount: null\n    }\n  ];\n  reviews: Array<{\n    user: {image: string, name: string, reviewsCount: number, points: number},\n    avgRating: number,\n    ratings: Array<{concept: string, rate: number}>,\n    publishedAt: string,\n    message: string\n  }> = [\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    },\n    {\n      user: {\n        image: '',\n        name: '',\n        reviewsCount: null,\n        points: null\n      },\n      avgRating: null,\n      ratings: [\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        },\n        {\n          concept: '',\n          rate: null\n        }\n      ],\n      publishedAt: null,\n      message: ''\n    }\n  ];\n  popularRecipes: Array<{\n    showcaseImage: string,\n    name: string,\n    chef: {name: string, image: string},\n    difficulty: string,\n    time: string,\n    calories: string,\n    chefExtract: string\n  }> = [\n    {\n      showcaseImage: '',\n      name: '',\n      chef: {\n        name: '',\n        image: ''\n      },\n      difficulty: '',\n      time: '',\n      calories: '',\n      chefExtract: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { flatMap} from 'rxjs/operators';\n\nimport { FoodListingModel } from './listing/food-listing.model';\nimport { FoodDetailsModel } from './details/food-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class FoodService {\n\n  private listingDataStore: DataStore<FoodListingModel>;\n  private detailsDataStore: DataStore<FoodDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<FoodListingModel> {\n    return this.http.get<FoodListingModel>('./assets/sample-data/food/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<FoodListingModel>): DataStore<FoodListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: FoodListingModel = new FoodListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(slug: string): Observable<FoodDetailsModel> {\n    return this.http.get<{items: Array<FoodDetailsModel>}>('./assets/sample-data/food/details.json')\n    .pipe(\n      flatMap(details => details.items.filter(item => item.slug === slug))\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<FoodDetailsModel>): DataStore<FoodDetailsModel> {\n\n    // Initialize the model specifying that it is a shell model\n    const shellModel: FoodDetailsModel = new FoodDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class FoodItemModel {\n  icon: string;\n  image: string;\n  name: string;\n  address: string;\n  priceRange: number;\n  rating: number;\n  tags: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  pictures: Array<string> = [\n    '',\n    '',\n    '',\n    '',\n    ''\n  ];\n}\n\nexport class FoodListingModel extends ShellModel {\n  items: Array<FoodItemModel> = [\n    new FoodItemModel(),\n    new FoodItemModel(),\n    new FoodItemModel(),\n    new FoodItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateDetailsModel extends ShellModel {\n  picture: string;\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  description: string;\n  price: string;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    patios: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class RealEstateItemModel {\n  slug: string;\n  picture: string;\n  address: string;\n  price: string;\n  liked: boolean;\n  accommodations: {\n    guests: number,\n    bedrooms: number,\n    beds: number,\n    bathrooms: number\n  };\n  amenities: Array<{name: string, icon: string}> = [\n    {\n      name: '',\n      icon: ''\n    },\n    {\n      name: '',\n      icon: ''\n    }\n  ];\n}\n\nexport class RealEstateListingModel extends ShellModel {\n  items: Array<RealEstateItemModel> = [\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel(),\n    new RealEstateItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { RealEstateListingModel } from './listing/real-estate-listing.model';\nimport { RealEstateDetailsModel } from './details/real-estate-details.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class RealEstateService {\n  private listingDataStore: DataStore<RealEstateListingModel>;\n  private detailsDataStore: DataStore<RealEstateDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<RealEstateListingModel> {\n    return this.http.get<RealEstateListingModel>('./assets/sample-data/real-estate/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<RealEstateListingModel>): DataStore<RealEstateListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateListingModel = new RealEstateListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<RealEstateDetailsModel> {\n    return this.http.get<RealEstateDetailsModel>('./assets/sample-data/real-estate/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<RealEstateDetailsModel>): DataStore<RealEstateDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: RealEstateDetailsModel = new RealEstateDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n}\n","import { ShellModel } from '../shell/data-store';\n\nexport class ShowcaseShellModel extends ShellModel {\n  cover: string;\n  image: string;\n  title: string;\n  description: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseShellUserModel extends ShellModel {\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCommentModel extends ShellModel {\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcasePostModel extends ShellModel {\n  id: number;\n  title: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseTaskModel extends ShellModel {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseUser2Model extends ShellModel {\n  id: number;\n  name: string;\n  email: string;\n  username: string;\n  company?: ShowcaseCompanyModel;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCompanyModel extends ShellModel {\n  catchPhrase: string;\n  name: string;\n  bs: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\n  user: ShowcaseUser2Model;\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\nimport { DataStore, ShellModel } from '../shell/data-store';\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\n\n@Injectable()\nexport class ShowcaseService {\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\n\n  constructor(private http: HttpClient) { }\n\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json').pipe(\n      tap(val => {\n        console.log('getData STARTED');\n        // tslint:disable-next-line:no-console\n        console.time('getData Roundtrip');\n      }),\n      delay(5000),\n      finalize(() => {\n        console.log('getData COMPLETED');\n        // tslint:disable-next-line:no-console\n        console.timeEnd('getData Roundtrip');\n      }));\n  }\n\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json');\n  }\n\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\n    // Use cache if available\n    if (!this.showcaseDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\n      this.showcaseDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.showcaseDataStore.load(dataSource);\n    }\n    return this.showcaseDataStore;\n  }\n\n  public getListDataSource(): Observable<any> {\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\n  }\n\n  public getPaginationDataSource(page: number): Observable<any> {\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\n      map(result => result['data']),\n      filter(results => results.length > 0)\n    );\n  }\n\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\n  }\n\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\n      return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\n  }\n\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\n    return dependantDataSource.pipe(\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\n      filter(post => !post.isShell),\n      concatMap(post => {\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\n      })\n    );\n  }\n\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n  }\n\n  // get the company details, a subset of the user data\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n\n    return dataObservable.pipe(\n      map((jsonResponse) => {\n        const filteredData: ShowcaseCompanyModel = {\n          ...jsonResponse.company\n        };\n        return filteredData;\n      })\n    );\n  }\n\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\n  }\n\n  // Concat the task with the details of the user\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\n    return this.getTasks().pipe(\n      concatMap(tasks => {\n        const completeTaskData = tasks.map(task => {\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\n\n          return combineLatest([\n            of(task),\n            taskUser\n          ]).pipe(\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\n              return {\n                ...taskData,\n                user: user\n              } as ShowcaseCombinedTaskUserModel;\n            })\n          );\n        });\n        return forkJoin(completeTaskData);\n      })\n    );\n  }\n\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\n    const firstLoadData = this.getPaginationDataSource(1);\n\n    return merge(\n      this.openDataStream.asObservable(),\n      firstLoadData\n    );\n  }\n\n  public pushValuesToOpenStream(): void {\n    const stackedValues = this.getStackedValues();\n\n    this.openDataStream.next(stackedValues);\n  }\n\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\n    const stackedValues = this.getStackedValues();\n\n    return of(stackedValues).pipe(delay(3000));\n  }\n\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\n    const newUser = {\n      first_name: 'Agustin',\n      last_name: 'Nitsuga',\n      avatar: './assets/sample-images/user/person_1.jpg'\n    } as ShowcaseShellUserModel;\n\n    // Get a random integer between 1 (and only 1) and 'max'\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\n      return Math.floor(Math.random() * max) + min;\n    };\n\n    // Randomly send one, two or three users\n    return Array(getRand(3)).fill(newUser);\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelDetailsModel extends ShellModel {\n  image: string;\n  icon: string;\n  name: string;\n  category: string;\n  shortDescription: string;\n  rating: number;\n  reviewsCount: number;\n  tags: Array<string> = new Array(3).fill('');\n  fullDescription: string;\n  openHours: Array<{day: string, open: boolean, hourFrom: string, hourTo: string}> = [\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: true,\n      hourFrom: '',\n      hourTo: ''\n    },\n    {\n      day: '',\n      open: false,\n      hourFrom: '',\n      hourTo: ''\n    }\n  ];\n  location: {\n    address: string,\n    city: string,\n    latlng: string,\n    mapImage: string\n  };\n  whereToStay: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  whereToEat: Array<{picture: string, name: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      rating: null\n    }\n  ];\n  relatedActivities: Array<{picture: string, name: string, category: string, rating: number}> = [\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    },\n    {\n      picture: '',\n      name: '',\n      category: '',\n      rating: null\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class TravelItemModel {\n  image: string;\n  icon: string;\n  name: string;\n  description: string;\n  category: string;\n  address: string;\n  rating: number;\n  reviewsCount: number;\n}\n\nexport class TravelListingModel extends ShellModel {\n  items: Array<TravelItemModel> = [\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel(),\n    new TravelItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../shell/data-store';\n\nimport { TravelListingModel } from './listing/travel-listing.model';\nimport { TravelDetailsModel } from './details/travel-details.model';\n\n@Injectable()\nexport class TravelService {\n  private listingDataStore: DataStore<TravelListingModel>;\n  private detailsDataStore: DataStore<TravelDetailsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getListingDataSource(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\n  }\n\n  public getListingStore(dataSource: Observable<TravelListingModel>): DataStore<TravelListingModel> {\n    // Use cache if available\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelListingModel = new TravelListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<TravelDetailsModel> {\n    return this.http.get<TravelDetailsModel>('./assets/sample-data/travel/details.json');\n  }\n\n  public getDetailsStore(dataSource: Observable<TravelDetailsModel>): DataStore<TravelDetailsModel> {\n    // Use cache if available\n    if (!this.detailsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: TravelDetailsModel = new TravelDetailsModel();\n      this.detailsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.detailsDataStore.load(dataSource);\n    }\n    return this.detailsDataStore;\n  }\n\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class UserFriendsModel extends ShellModel {\n  friends: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: true\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    }\n  ];\n  followers: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: true\n    }\n  ];\n  following: Array<{\n    image: string,\n    name: string,\n    job: string,\n    followers: string,\n    followings: string,\n    following: boolean}> = [\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    },\n    {\n      image: '',\n      name: '',\n      job: '',\n      followers: '',\n      followings: '',\n      following: false\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { ShellModel } from '../../shell/data-store';\n\nexport class UserProfileModel extends ShellModel {\n  userImage: string;\n  name: string;\n  membership: string;\n  job: string;\n  likes: string;\n  followers: string;\n  following: string;\n  about: string;\n  friends: Array<{image: string, name: string}> = [\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    },\n    {\n      image: '',\n      name: ''\n    }\n  ];\n  photos: Array<string> = [\n    '',\n    '',\n    '',\n    ''\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { UserProfileModel } from './profile/user-profile.model';\nimport { UserFriendsModel } from './friends/user-friends.model';\nimport { DataStore } from '../shell/data-store';\n\n@Injectable()\nexport class UserService {\n  private profileDataStore: DataStore<UserProfileModel>;\n  private friendsDataStore: DataStore<UserFriendsModel>;\n\n  constructor(private http: HttpClient) { }\n\n  public getProfileDataSource(): Observable<UserProfileModel> {\n    return this.http.get<UserProfileModel>('./assets/sample-data/user/user-profile.json');\n  }\n\n  public getProfileStore(dataSource: Observable<UserProfileModel>): DataStore<UserProfileModel> {\n    // Use cache if available\n    if (!this.profileDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserProfileModel = new UserProfileModel();\n      this.profileDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.profileDataStore.load(dataSource);\n    }\n    return this.profileDataStore;\n  }\n\n  public getFriendsDataSource(): Observable<UserFriendsModel> {\n    return this.http.get<UserFriendsModel>('./assets/sample-data/user/user-friends.json');\n  }\n\n  public getFriendsStore(dataSource: Observable<UserFriendsModel>): DataStore<UserFriendsModel> {\n    // Use cache if available\n    if (!this.friendsDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserFriendsModel = new UserFriendsModel();\n      this.friendsDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.friendsDataStore.load(dataSource);\n    }\n    return this.friendsDataStore;\n  }\n\n}\n","import { FormControl, FormGroup } from '@angular/forms';\n\nexport class PasswordValidator {\n\n  // If our validation fails, we return an object with a key for the error name and a value of true.\n  // Otherwise, if the validation passes, we simply return null because there is no error.\n\n  static areNotEqual(formGroup: FormGroup) {\n    let val;\n    let valid = true;\n\n    for (const key in formGroup.controls) {\n      if (formGroup.controls.hasOwnProperty(key)) {\n        const control: FormControl = <FormControl>formGroup.controls[key];\n\n        if (val === undefined) {\n          val = control.value;\n        } else {\n          if (val !== control.value) {\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    if (valid) {\n      return null;\n    }\n\n    return {\n      areNotEqual: true\n    };\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}