{"version":3,"sources":["./src/app/shell/data-store.ts","./src/app/user/friends/user-friends.module.ts","./src/app/user/friends/user-friends.page.ts","./src/app/user/friends/user-friends.page.html","./src/app/user/friends/user-friends.resolver.ts","./src/app/utils/resolver-helper.ts"],"names":[],"mappings":"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","file":"user-friends-user-friends-module-es2015.js","sourcesContent":["import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { UserService } from '../user.service';\nimport { UserFriendsPage } from './user-friends.page';\nimport { UserFriendsResolver } from './user-friends.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserFriendsPage,\n    resolve: {\n      data: UserFriendsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserFriendsPage],\n  providers: [\n    UserFriendsResolver,\n    UserService\n  ]\n})\nexport class UserFriendsPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Component({\n  selector: 'app-user-friends',\n  templateUrl: './user-friends.page.html',\n  styleUrls: [\n    './styles/user-friends.page.scss',\n    './styles/user-friends.shell.scss',\n    './styles/user-friends.ios.scss',\n    './styles/user-friends.md.scss'\n  ]\n})\nexport class UserFriendsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  data: UserFriendsModel;\n\n  segmentValue = 'friends';\n  friendsList: Array<any>;\n  followersList: Array<any>;\n  followingList: Array<any>;\n  searchQuery = '';\n  showFilters = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.data && this.data.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserFriendsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserFriendsModel>(resolvedRouteData.data, UserFriendsModel)\n        .subscribe(\n          (state) => {\n            this.data = state;\n            this.friendsList = this.data.friends;\n            this.followersList = this.data.followers;\n            this.followingList = this.data.following;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  segmentChanged(ev): void {\n    this.segmentValue = ev.detail.value;\n\n    // Check if there's any filter and apply it\n    this.searchList();\n  }\n\n  searchList(): void {\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n\n    if (this.segmentValue === 'friends') {\n      this.friendsList = this.filterList(this.data.friends, query);\n    } else if (this.segmentValue === 'followers') {\n      this.followersList = this.filterList(this.data.followers, query);\n    } else if (this.segmentValue === 'following') {\n      this.followingList = this.filterList(this.data.following, query);\n    }\n  }\n\n  filterList(list, query): Array<any> {\n    return list.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/user\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-friends-content\">\n  <ion-segment value=\"friends\" class=\"user-friends-segment\" (ionChange)=\"segmentChanged($event)\">\n    <ion-segment-button value=\"friends\">\n      <ion-label>Friends</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"followers\">\n      <ion-label>Followers</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"following\">\n      <ion-label>Following</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  <ion-searchbar class=\"friends-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\"></ion-searchbar>\n\n  <ng-template #friendItem let-friend=\"friend\">\n    <ion-row class=\"user-details-section\">\n      <ion-col class=\"user-image-wrapper\" size=\"2\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"friend.image\" [alt]=\"'friend'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col class=\"user-data-wrapper\">\n        <div class=\"user-info\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"friend.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-job\">\n            <app-text-shell [data]=\"friend.job\"></app-text-shell>\n          </h5>\n        </div>\n      </ion-col>\n      <ion-col class=\"user-actions-wrapper\">\n        <ion-button *ngIf=\"!friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"primary\">Follow</ion-button>\n        <ion-button *ngIf=\"friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"light\">Following</ion-button>\n      </ion-col>\n    </ion-row>\n  </ng-template>\n\n  <section [hidden]=\"segmentValue !== 'friends'\">\n    <ion-list class=\"friends-list\" *ngIf=\"friendsList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of friendsList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"friendsList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Friends</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'followers'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followersList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followersList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followersList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Followers</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'following'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followingList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followingList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followingList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Following</h3>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Injectable()\nexport class UserFriendsResolver implements Resolve<DataStore<UserFriendsModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserFriendsModel> {\n    const dataSource: Observable<UserFriendsModel> = this.userService.getFriendsDataSource();\n    const dataStore: DataStore<UserFriendsModel> = this.userService.getFriendsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}