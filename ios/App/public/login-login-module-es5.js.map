{"version":3,"sources":["webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html"],"names":["routes","path","component","LoginPageModule","forChild","imports","declarations","LoginPage","router","menu","validation_messages","type","message","loginForm","compose","required","pattern","minLength","enable","console","log","navigate","doLogin","doFacebookLogin","doGoogleLogin","doTwitterLogin","selector","templateUrl","styleUrls"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [\n    './styles/login.page.scss'\n  ]\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController\n  ) {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('test@test.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  doLogin(): void {\n    console.log('do Log In');\n    this.router.navigate(['app/categories']);\n  }\n\n  goToForgotPassword(): void {\n    console.log('redirect to forgot-password page');\n  }\n\n  doFacebookLogin(): void {\n    console.log('facebook login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doGoogleLogin(): void {\n    console.log('google login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doTwitterLogin(): void {\n    console.log('twitter login');\n    this.router.navigate(['app/categories']);\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Log In</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"login-content\">\n  <h2 class=\"auth-title\">\n    Welcome!\n    <br/>\n    Discover the new Ionic 5\n  </h2>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <app-show-hide-password>\n          <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n        </app-show-hide-password>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.password\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\n    <ion-row class=\"other-auth-options-row\">\n      <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\n        Forgot Password?\n      </ion-button>\n      <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\n        Sign Up!\n      </ion-button>\n    </ion-row>\n  </form>\n\n  <div class=\"social-auth-options\">\n    <p class=\"options-divider\">Or</p>\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookLogin()\">Log In with Facebook</ion-button>\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleLogin()\">Log In with Google</ion-button>\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterLogin()\">Log In with Twitter</ion-button>\n  </div>\n</ion-content>\n"]}